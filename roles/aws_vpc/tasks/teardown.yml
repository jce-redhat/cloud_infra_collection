---
- name: Get VPC
  amazon.aws.ec2_vpc_net_info:
    region: '{{ aws_vpc_region }}'
    filters:
      "tag:vpc_name": '{{ aws_vpc_name }}'
  register: _vpc

- name: Delete VPC block
  when: _vpc.vpcs is truthy
  block:
    - name: Ensure there is only one matching VPC
      ansible.builtin.assert:
        that:
          - _vpc.vpcs | length == 1
        fail_msg: >
          Found more than one VPC with the same name and vpc_name tag, failing for safety

    - name: Set VPC ID fact
      ansible.builtin.set_fact:
        _vpc_id: '{{ _vpc.vpcs[0].vpc_id }}'

    - name: Check for existing instances
      amazon.aws.ec2_instance_info:
        region: '{{ aws_vpc_region }}'
        filters:
          # get anything not in a terminated state
          # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html
          instance-state-name:
            - pending
            - running
            - stopping
            - stopped
            - shutting-down
          vpc-id: '{{ _vpc_id }}'
      register: _instance_info

    - name: Fail if instances exist
      ansible.builtin.assert:
        that:
          - not _instance_info.instances is truthy
        fail_msg: Cannot delete VPC where instances exist

    - name: Get VPC subnets
      amazon.aws.ec2_vpc_subnet_info:
        region: '{{ aws_vpc_region }}'
        filters:
          "tag:vpc_name": '{{ aws_vpc_name }}'
          vpc-id: '{{ _vpc_id }}'
      register: _subnets

    - name: Delete VPC subnets
      amazon.aws.ec2_vpc_subnet:
        state: absent
        vpc_id: '{{ _vpc_id }}'
        region: '{{ aws_vpc_region }}'
        cidr: '{{ item.cidr_block }}'
      loop: '{{ _subnets.subnets }}'

    - name: Get VPC security groups
      amazon.aws.ec2_security_group_info:
        region: '{{ aws_vpc_region }}'
        filters:
          "tag:vpc_name": '{{ aws_vpc_name }}'
          vpc-id: '{{ _vpc_id }}'
      register: _sg

    - name: Delete VPC security groups
      amazon.aws.ec2_security_group:
        state: absent
        region: '{{ aws_vpc_region }}'
        group_id: '{{ item.group_id }}'
      loop: '{{ _sg.security_groups }}'

    - name: Get VPC route tables
      amazon.aws.ec2_vpc_route_table_info:
        region: '{{ aws_vpc_region }}'
        filters:
          "tag:vpc_name": '{{ aws_vpc_name }}'
          vpc-id: '{{ _vpc_id }}'
      register: _rt

    - name: Delete VPC route tables
      amazon.aws.ec2_vpc_route_table:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'
        route_table_id: '{{ item.route_table_id }}'
        lookup: id
      loop: '{{ _rt.route_tables }}'

    - name: Delete VPC internet gateway
      amazon.aws.ec2_vpc_igw:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'

...
# vim: ft=yaml.ansible
