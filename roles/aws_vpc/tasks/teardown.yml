---
- name: Get role output
  ansible.builtin.include_tasks:
    file: role_output.yml

- name: Delete VPC block
  when: _vpc_output.vpcs | length > 0
  block:
    - name: Set VPC ID fact
      ansible.builtin.set_fact:
        _vpc_id: '{{ _vpc_output.vpcs[0].vpc_id }}'

    - name: Check for existing instances
      amazon.aws.ec2_instance_info:
        region: '{{ aws_vpc_region }}'
        filters:
          # get anything not in a terminated state
          # https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html
          instance-state-name:
            - pending
            - running
            - stopping
            - stopped
            - shutting-down
          vpc-id: '{{ _vpc_id }}'
      register: _instance_info

    - name: Fail if instances exist
      ansible.builtin.assert:
        that:
          - _instance_info.instances | length == 0
        fail_msg: Cannot delete VPC where instances exist

    - name: Delete VPC subnets
      amazon.aws.ec2_vpc_subnet:
        state: absent
        vpc_id: '{{ _vpc_id }}'
        region: '{{ aws_vpc_region }}'
        cidr: '{{ item.cidr_block }}'
      loop: '{{ _subnet_output.subnets }}'

    - name: Delete VPC security groups
      amazon.aws.ec2_security_group:
        state: absent
        region: '{{ aws_vpc_region }}'
        group_id: '{{ item.group_id }}'
      loop: '{{ _sg_output.security_groups }}'

    - name: Delete VPC route tables
      amazon.aws.ec2_vpc_route_table:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'
        route_table_id: '{{ item.route_table_id }}'
        lookup: id
      loop: '{{ _rt_output.route_tables }}'

    - name: Delete VPC internet gateway
      amazon.aws.ec2_vpc_igw:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'

    - name: Delete VPC
      amazon.aws.ec2_vpc_net:
        state: absent
        region: '{{ aws_vpc_region }}'
        vpc_id: '{{ _vpc_id }}'

...
# vim: ft=yaml.ansible
